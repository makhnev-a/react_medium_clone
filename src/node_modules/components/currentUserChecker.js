import React, {useContext, useEffect} from "react";

import useFetch from "hooks/useFetch";
import useLocalStorage from "hooks/useLocalStorage";
import {CurrentUserContext} from "contexts/currentUser";

const CurrentUserChecker = ({children}) => {
  const [{response}, doFetch] = useFetch('/user');
  const [, setCurrentUserState] = useContext(CurrentUserContext);
  const [token] = useLocalStorage('token');

  useEffect(() => {
    if (!token) {
      setCurrentUserState(state => ({
        ...state,
        isLoggedIn: false
      }));

      return;
    }

    doFetch();
    setCurrentUserState(state => ({
      ...state,
      isLoading: true
    }));
  }, [setCurrentUserState]);

  useEffect(() => {
    if (!response) {
      return;
    }

    setCurrentUserState(state => ({
      ...state,
      isLoggedIn: true,
      isLoadng: false,
      currentUser: response.user
    }))
  }, [response, setCurrentUserState]);

  return (
    children
  );
};

export default CurrentUserChecker;